diff --git a/Makefile b/Makefile
index 09d790c..e0e9b9a 100644
--- a/Makefile
+++ b/Makefile
@@ -170,6 +170,7 @@ UPROGS=\
 	_echo\
 	_forktest\
 	_grep\
+	_hello\
 	_init\
 	_kill\
 	_ln\
@@ -181,6 +182,7 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+	_test\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
diff --git a/defs.h b/defs.h
index 82fb982..5b15069 100644
--- a/defs.h
+++ b/defs.h
@@ -120,6 +120,7 @@ void            userinit(void);
 int             wait(void);
 void            wakeup(void*);
 void            yield(void);
+void            hello(void); // J.H.
 
 // swtch.S
 void            swtch(struct context**, struct context*);
diff --git a/hello.c b/hello.c
new file mode 100644
index 0000000..bf82225
--- /dev/null
+++ b/hello.c
@@ -0,0 +1,7 @@
+#include "types.h"
+#include "user.h"
+
+int main(int argc, char **argv){
+    printf(1, "hello cs153\n"); // fd=1 means standard output
+    exit();
+}
\ No newline at end of file
diff --git a/proc.c b/proc.c
index 806b1b1..0fa2f80 100644
--- a/proc.c
+++ b/proc.c
@@ -532,3 +532,9 @@ procdump(void)
     cprintf("\n");
   }
 }
+
+// J.H.
+void
+hello(void) {
+  cprintf("\n\n Hello from your kernel space! \n\n");
+}
\ No newline at end of file
diff --git a/syscall.c b/syscall.c
index ee85261..1173d26 100644
--- a/syscall.c
+++ b/syscall.c
@@ -103,6 +103,7 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_hello(void); // J.H.
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +127,7 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_hello]   sys_hello, // J.H.
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..b1b0ad7 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_hello  22  // J.H.
\ No newline at end of file
diff --git a/sysproc.c b/sysproc.c
index 0686d29..0e038c0 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -89,3 +89,9 @@ sys_uptime(void)
   release(&tickslock);
   return xticks;
 }
+
+int
+sys_hello(void) {
+  hello();
+  return 0;
+}
\ No newline at end of file
diff --git a/test.c b/test.c
new file mode 100644
index 0000000..ab9f787
--- /dev/null
+++ b/test.c
@@ -0,0 +1,9 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+
+int main(int argc, char *argv[]){
+    //printf(1, "hello world\n");
+    hello(); // J.H.
+    exit();
+}
\ No newline at end of file
diff --git a/user.h b/user.h
index 4f99c52..c342918 100644
--- a/user.h
+++ b/user.h
@@ -23,6 +23,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int hello(void); // J.H.
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..1691e39 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,4 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(hello) // J.H.
\ No newline at end of file
